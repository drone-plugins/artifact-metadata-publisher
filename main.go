package main

import (
	"fmt"
	"os"
	"strings"

	"github.com/sirupsen/logrus"
	"github.com/urfave/cli"
)

var (
	pluginVersion = "unknown"
)

func main() {
	// TODO Add the env file functionality
	app := cli.NewApp()
	app.Name = "artifact metadata publisher plugin"
	app.Usage = "artifact metadata publisher plugin"
	app.Action = run
	app.Version = pluginVersion
	app.Flags = []cli.Flag{
		cli.StringSliceFlag{
			Name:   "urls",
			Usage:  "URL of files to publish as artifact",
			EnvVar: "PLUGIN_FILE_URLS",
		},
		cli.StringFlag{
			Name:   "artifact-file",
			Usage:  "Artifact file location that will be generated by the plugin. This file will include information of docker images that are uploaded by the plugin.",
			EnvVar: "PLUGIN_ARTIFACT_FILE",
		},
	}

	if err := app.Run(os.Args); err != nil {
		logrus.Fatal(err)
	}
}

func run(c *cli.Context) error {
	urls := c.StringSlice("urls")
	artifactFilePath := c.String("artifact-file")

	files := make([]File, 0)
	for i, url := range urls {
		parts := strings.Split(url, ":::")
		if len(parts) != 2 {
			files = append(files, File{Name: fmt.Sprintf("file-%d", i), URL: url})
			continue
		}
		name := parts[0]
		url := parts[1]

		// Append to files slice
		files = append(files, File{Name: name, URL: url})

	}
	return writeArtifactFile(files, artifactFilePath)
}
